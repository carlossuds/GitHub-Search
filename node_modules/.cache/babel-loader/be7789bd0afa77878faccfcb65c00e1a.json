{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Suds\\\\Documents\\\\GitHub\\\\desafio_concrete\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Suds\\\\Documents\\\\GitHub\\\\desafio_concrete\\\\web\\\\src\\\\pages\\\\Result\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MdSearch, MdLocationOn, MdStarBorder, MdGroupWork } from 'react-icons/md';\nimport { FiBox } from 'react-icons/fi';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\nimport api from '../../services/api';\nimport history from '../../services/history';\nimport { Container, Head, Text1, Text2, Input, Button, Profile, Avatar, Name, ProfileText, RepoList, RepoItem } from './styles';\nexport default function Result({\n  location\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        repos = _useState4[0],\n        setRepos = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stars = _useState6[0],\n        setStars = _useState6[1];\n\n  useEffect(() => {\n    setRepos(location.state.repos);\n    let count = 0; // eslint-disable-next-line array-callback-return\n\n    repos.map(repo => {\n      count += repo.stargazers_count;\n    });\n    setStars(count);\n    setUser(location.state.user.login);\n  }, [location.state.repos, location.state.user.login, repos]);\n\n  async function handleClick() {\n    try {\n      const responseUser = await api.get(`/users/${user}`);\n      const responseRepos = await api.get(`/users/${user}/repos`);\n      history.push({\n        pathname: '/result',\n        state: {\n          user: responseUser.data,\n          repos: responseRepos.data\n        } // your data array of objects\n\n      });\n    } catch (err) {\n      history.push({\n        pathname: '/notfound',\n        state: {\n          user: {\n            login: user\n          }\n        }\n      });\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Link, {\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Text1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Github\"), React.createElement(Text2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Search\")), React.createElement(Input, {\n    type: \"text\",\n    value: user,\n    onChange: e => setUser(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(MdSearch, {\n    color: \"white\",\n    size: 30,\n    style: {\n      marginTop: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Profile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: location.state.user.avatar_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, location.state.user.name), React.createElement(ProfileText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, location.state.user.login), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(ProfileText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(MdGroupWork, {\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), location.state.user.company), React.createElement(ProfileText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(MdLocationOn, {\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), location.state.user.location), React.createElement(ProfileText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(MdStarBorder, {\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), stars), React.createElement(ProfileText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(FiBox, {\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), location.state.user.public_repos), React.createElement(ProfileText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(AiOutlineUsergroupAdd, {\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), location.state.user.followers)), React.createElement(RepoList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, repos.map(repo => React.createElement(RepoItem, {\n    key: repo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: repo.html_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Name, {\n    style: {\n      color: '#ac53f2'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, repo.name)), React.createElement(ProfileText, {\n    style: {\n      color: '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, repo.description), React.createElement(ProfileText, {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(MdStarBorder, {\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), repo.stargazers_count))).sort((a, b) => a.stargazers_count - b.stargazers_count)))));\n}","map":{"version":3,"sources":["C:/Users/Suds/Documents/GitHub/desafio_concrete/web/src/pages/Result/index.js"],"names":["React","useState","useEffect","Link","MdSearch","MdLocationOn","MdStarBorder","MdGroupWork","FiBox","AiOutlineUsergroupAdd","api","history","Container","Head","Text1","Text2","Input","Button","Profile","Avatar","Name","ProfileText","RepoList","RepoItem","Result","location","user","setUser","repos","setRepos","stars","setStars","state","count","map","repo","stargazers_count","login","handleClick","responseUser","get","responseRepos","push","pathname","data","err","textDecoration","color","e","target","value","marginTop","avatar_url","name","company","public_repos","followers","id","html_url","description","sort","a","b"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  MdSearch,\n  MdLocationOn,\n  MdStarBorder,\n  MdGroupWork,\n} from 'react-icons/md';\nimport { FiBox } from 'react-icons/fi';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\n\nimport api from '../../services/api';\nimport history from '../../services/history';\n\nimport {\n  Container,\n  Head,\n  Text1,\n  Text2,\n  Input,\n  Button,\n  Profile,\n  Avatar,\n  Name,\n  ProfileText,\n  RepoList,\n  RepoItem,\n} from './styles';\n\nexport default function Result({ location }) {\n  const [user, setUser] = useState('');\n  const [repos, setRepos] = useState([]);\n  const [stars, setStars] = useState(0);\n\n  useEffect(() => {\n    setRepos(location.state.repos);\n    let count = 0;\n    // eslint-disable-next-line array-callback-return\n    repos.map(repo => {\n      count += repo.stargazers_count;\n    });\n    setStars(count);\n    setUser(location.state.user.login);\n  }, [location.state.repos, location.state.user.login, repos]);\n\n  async function handleClick() {\n    try {\n      const responseUser = await api.get(`/users/${user}`);\n\n      const responseRepos = await api.get(`/users/${user}/repos`);\n\n      history.push({\n        pathname: '/result',\n        state: {\n          user: responseUser.data,\n          repos: responseRepos.data,\n        }, // your data array of objects\n      });\n    } catch (err) {\n      history.push({\n        pathname: '/notfound',\n        state: {\n          user: { login: user },\n        },\n      });\n    }\n  }\n\n  return (\n    <>\n      <Head>\n        <Link style={{ textDecoration: 'none', color: 'black' }} to=\"/\">\n          <Text1>Github</Text1>\n          <Text2>Search</Text2>\n        </Link>\n\n        <Input\n          type=\"text\"\n          value={user}\n          onChange={e => setUser(e.target.value)}\n        />\n        <Button onClick={handleClick}>\n          <MdSearch color=\"white\" size={30} style={{ marginTop: 5 }} />\n        </Button>\n      </Head>\n      <Container>\n        <Profile>\n          <Avatar src={location.state.user.avatar_url} />\n          <Name>{location.state.user.name}</Name>\n          <ProfileText>{location.state.user.login}</ProfileText>\n          <p />\n          <ProfileText>\n            <MdGroupWork size={30} />\n            {location.state.user.company}\n          </ProfileText>\n          <ProfileText>\n            <MdLocationOn size={30} />\n            {location.state.user.location}\n          </ProfileText>\n          <ProfileText>\n            <MdStarBorder size={30} />\n            {stars}\n          </ProfileText>\n          <ProfileText>\n            <FiBox size={30} />\n            {location.state.user.public_repos}\n          </ProfileText>\n          <ProfileText>\n            <AiOutlineUsergroupAdd size={30} />\n            {location.state.user.followers}\n          </ProfileText>\n        </Profile>\n\n        <RepoList>\n          <ul>\n            {repos\n              .map(repo => (\n                <RepoItem key={repo.id}>\n                  <Link to={repo.html_url}>\n                    <Name style={{ color: '#ac53f2' }}>{repo.name}</Name>\n                  </Link>\n                  <ProfileText style={{ color: '#000000' }}>\n                    {repo.description}\n                  </ProfileText>\n                  <ProfileText style={{ marginTop: 10 }}>\n                    <MdStarBorder size={30} />\n                    {repo.stargazers_count}\n                  </ProfileText>\n                </RepoItem>\n              ))\n              .sort((a, b) => a.stargazers_count - b.stargazers_count)}\n          </ul>\n        </RepoList>\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}